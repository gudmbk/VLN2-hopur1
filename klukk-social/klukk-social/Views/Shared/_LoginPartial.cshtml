@using klukk_social.Models
@model LoginViewModel
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right span">
		<li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
	}
}
else
{
	<div class="navbar-form form-inline">
		<section id="loginForm">
			@*@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-inline", role = "form" }))*@
			@using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "form-inline", role = "form" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				
				@*@Html.LabelFor(m => m.Email, new { @class = "text-white" })*@
				@Html.TextBoxFor(m => m.UserName, new { @class = "form-control fullwidth", placeholder = "Netfang / Notendanafn" })
				@Html.ValidationMessageFor(m => m.UserName, "")

				@*@Html.LabelFor(m => m.Password, new { @class = "text-white" })*@
				@Html.PasswordFor(m => m.Password, new { @class = "form-control topmargin fullwidth", placeholder = "Lykilorð" })
				@Html.ValidationMessageFor(m => m.Password, "")

				<input type="submit" value="Log in" class="btn btn-default topmargin" />


				@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { @class = "btn btn-default topmargin", id = "registerLink" })
			}
		</section>
	</div>
}
